install.packages("rgdal")
install.packages("ggplot2")
z = readOGR("https://raw.github.com/datasets/geo-boundaries-world-110m/master/countries.geojson", "OGRGeoJSON")
library(rgdal)
readOGR("https://raw.github.com/datasets/geo-boundaries-world-110m/master/countries.geojson", "OGRGeoJSON")
<<<<<<< HEAD
library(rgdal)
coordinates <- readOGR("c://delete//countries.geojson", "OGRGeoJSON")
library(rgdal)
coordinates <- readOGR("c://delete//countries.geojson", "OGRGeoJSON")
coordinates <- readOGR("c://delete//countries.geojson.txt", "OGRGeoJSON")
devtools::use_data(coordinates, internal = FALSE, overwrite = TRUE)
=======
c(1,1,1,1,2) %in% 0:10
match(c(1,1,1,1,2), 0:10)
library(flipPlots)
vGeographicRegionNames
library(flipPlots)
devtools::load_all(".")
GeographicRegionNames("continents")
matrix(1:7,7)
matrix(1:7,7)[c(1,1,1,1,2,2,3,2,1,2,3),]
>>>>>>> 4782c3628f6952807aaf00782fc7cc7858ce7b8f
library(flipPlots)
GeographicRegionNames("name")
z = matrix(1:6, 6,
dimnames =list(
c("Asia", "Africa", "Europe", "South America", "Oceania", "North America"), "A"
))
print(z)
WorldMap(z, type = "continent", remove.last.row = FALSE, remove.last.column = FALSE)
z = matrix(1:6, 6,
dimnames =list(
c("Asia", "Africa", "Europe", "South America", "Oceania", "North America"), "A"
))
z = matrix(1:6, 6,
dimnames =list(
c("Asia", "Africa", "Europe", "South America", "Oceania", "North America"), "A"
))
print(z)
WorldMap(z, type = "continent", remove.last.row = FALSE, remove.last.column = FALSE)
install.packages("leaflet")
WorldMap(z, type = "continent", remove.last.row = FALSE, remove.last.column = FALSE)
GeographicRegionNames("type")
GeographicRegionNames("name")
GeographicRegionNames("continent")
GeographicRegionTypes()
class(coordinates)
coordinates[["name"]]
coordinates
library(rgdal)
#https://raw.github.com/datasets/geo-boundaries-world-110m/master/countries.geojson
country.coordinates <- readOGR("c://delete//countries.geojson.txt", "OGRGeoJSON")
devtools::use_data(country.coordinates, internal = FALSE, overwrite = TRUE)
country.coordinates
country.coordinates[["name"]]
country.coordinates["name"]
country.coordinates["type"]
country.coordinates["sdfds"]
rm(country.coordinates)
library(flipPlots)
